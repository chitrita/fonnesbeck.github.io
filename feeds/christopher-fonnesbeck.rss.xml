<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Strong Inference - Christopher Fonnesbeck</title><link>http://stronginference.com/</link><description></description><lastBuildDate>Tue, 10 Jan 2017 00:00:00 -0600</lastBuildDate><item><title>The First Release of PyMC3</title><link>http://stronginference.com/pymc3-release.html</link><description>&lt;p&gt;&lt;img alt="pymc3" src="http://d.pr/i/lJ7d+"&gt;&lt;/p&gt;
&lt;p&gt;On Monday morning the PyMC dev team pushed the first release of &lt;a href="https://peerj.com/articles/cs-55/"&gt;PyMC3&lt;/a&gt;, the culmination of over 5 years of collaborative work. We are very pleased to be able to provide a stable version of the package to the Python scientific computing community. For those of you unfamiliar with the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Tue, 10 Jan 2017 00:00:00 -0600</pubDate><guid isPermaLink="false">tag:stronginference.com,2017-01-10:/pymc3-release.html</guid><category>bayesian</category><category>pymc</category><category>mcmc</category><category>python</category><category>variational inference</category></item><item><title>Calculating Bayes factors with PyMC</title><link>http://stronginference.com/bayes-factors-pymc.html</link><description>&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;p&gt;Statisticians are sometimes interested in comparing two (or more) models, with respect to their relative support by a particular dataset. This may be in order to select the best model to use for inference, or to weight models so that they can be averaged for use in multimodel inference. &lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sun, 30 Nov 2014 00:00:00 -0600</pubDate><guid isPermaLink="false">tag:stronginference.com,2014-11-30:/bayes-factors-pymc.html</guid><category>bayesian</category><category>pymc</category><category>mcmc</category><category>python</category></item><item><title>Burn-in, and Other MCMC Folklore</title><link>http://stronginference.com/burn-in-and-other-mcmc-folklore.html</link><description>&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;p&gt;I have been slowly working my way through &lt;a href="http://amzn.to/mR9PVr"&gt;The Handbook of Markov Chain Monte Carlo&lt;/a&gt;, a compiled volume edited by Steve Brooks &lt;em&gt;et al.&lt;/em&gt; that I picked up at last week's Joint Statistical Meetings. The first chapter is a primer on MCMC by &lt;a href="http://www.stat.umn.edu/~charlie/"&gt;Charles Geyer&lt;/a&gt;, in which he summarizes the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sat, 09 Aug 2014 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:stronginference.com,2014-08-09:/burn-in-and-other-mcmc-folklore.html</guid><category>bayesian</category><category>mcmc</category><category>pymc</category><category>python</category></item><item><title>Implementing Dirichlet processes for Bayesian semi-parametric models</title><link>http://stronginference.com/implementing-dirichlet-processes-for-bayesian-semi-parametric-models.html</link><description>&lt;script type="text/x-mathjax-config"&gt;
MathJax.Hub.Config({
  tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
});
&lt;/script&gt;

&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;p&gt;Semi-parametric methods have been preferred for a long time in survival analysis, for example, where the baseline hazard function is expressed non-parametrically to avoid assumptions regarding its form. Meanwhile, the use of non-parametric methods in Bayesian statistics is increasing. However, there are few resources to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Fri, 07 Mar 2014 00:00:00 -0600</pubDate><guid isPermaLink="false">tag:stronginference.com,2014-03-07:/implementing-dirichlet-processes-for-bayesian-semi-parametric-models.html</guid><category>bayesian</category><category>pymc</category><category>mcmc</category><category>python</category></item><item><title>Automatic Missing Data Imputation with PyMC</title><link>http://stronginference.com/missing-data-imputation.html</link><description>&lt;script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;
&lt;/script&gt;

&lt;p&gt;A distinct advantage of using Bayesian inference is in its universal application of probability models for providing inference. As such, all components of a Bayesian model are specified using probability distributions for either describing a sampling model (in the case of observed data) or characterizing the uncertainty of an unknown …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Christopher Fonnesbeck</dc:creator><pubDate>Sun, 18 Aug 2013 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:stronginference.com,2013-08-18:/missing-data-imputation.html</guid><category>pymc</category><category>mcmc</category><category>python</category></item></channel></rss>